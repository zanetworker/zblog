<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Software-Defined Stack on </title>
    <link>https://adelzaalouk.me/tags/software-defined-stack/</link>
    <description>Recent content in Software-Defined Stack on </description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 28 Apr 2016 15:04:23 +0000</lastBuildDate><atom:link href="https://adelzaalouk.me/tags/software-defined-stack/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The Software-Defined Stack | EII OpenStack Networking</title>
      <link>https://adelzaalouk.me/post/technical/2016-04-28-openstack-a-brief-networking-tour/</link>
      <pubDate>Thu, 28 Apr 2016 15:04:23 +0000</pubDate>
      
      <guid>https://adelzaalouk.me/post/technical/2016-04-28-openstack-a-brief-networking-tour/</guid>
      <description>&lt;p&gt;In this post, we are going take a quick look at how OpenStack does networking, along the process we are going to mention the important agents involved.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;</description>
    </item>
    
    <item>
      <title>The Software-Defiend Stack | EI</title>
      <link>https://adelzaalouk.me/post/technical/2016-04-28-openstack-introduction/</link>
      <pubDate>Sun, 28 Feb 2016 15:04:23 +0000</pubDate>
      
      <guid>https://adelzaalouk.me/post/technical/2016-04-28-openstack-introduction/</guid>
      <description>Welcome to the Software-Define Stack Series, this will be an extensive series, exploring the software-defined aspects behind OpenStack and digging deeper into the structure of OpenStack and its internal anatomy.
Before I start to talk about OpenStack specifically, let me explain why this series is called the “Software-Defined” series. The term Software-Defined was first used to describe networks which follow these following patterns:
What we will be looking at in this series is how OpenStack really applies the Software-Defined paradigms (i.</description>
    </item>
    
  </channel>
</rss>
